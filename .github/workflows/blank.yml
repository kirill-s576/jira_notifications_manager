# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.JB_SERVER_PRIVATE_SSH_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
      
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.JB_SERVER_SSH_HOST }} >> ~/.ssh/known_hosts
      
      - name: Create a test folder
        run: ssh ${{ secrets.JB_SERVER_USERNAME }}@${{ secrets.JB_SERVER_SSH_HOST }} mkdir 123

      - name: Pull repo on server
        run: |
          ssh ${{ secrets.JB_SERVER_USERNAME }}@${{ secrets.JB_SERVER_SSH_HOST }} mkdir -p /home/${{ secrets.JB_SERVER_USERNAME }}
          ssh ${{ secrets.JB_SERVER_USERNAME }}@${{ secrets.JB_SERVER_SSH_HOST }} cd /home/${{ secrets.JB_SERVER_USERNAME }}/jira_notifications_manager && git pull origin main
          ssh ${{ secrets.JB_SERVER_USERNAME }}@${{ secrets.JB_SERVER_SSH_HOST }} cd /home/${{ secrets.JB_SERVER_USERNAME }}/jira_notifications_manager && docker-compose up -d