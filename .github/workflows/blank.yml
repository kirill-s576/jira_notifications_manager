# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # - uses: actions/checkout@v3
      
      - name: Pull project and restart docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.JB_SERVER_SSH_HOST }}
          username: ${{ secrets.JB_SERVER_USERNAME }}
          key: ${{ secrets.JB_SERVER_PRIVATE_SSH_KEY }}
          script: |
            cd /home/${{ secrets.JB_SERVER_USERNAME }}/jira_notifications_manager
            git pull origin main
            export ENV=${{ secrets.ENV }}
            export SERVER_HOST=${{ secrets.SERVER_HOST }}
            export SERVER_PORT=${{ secrets.SERVER_PORT }}
            export SERVER_SSL=${{ secrets.SERVER_SSL }}
            export MONGO_DATABASE=${{ secrets.MONGO_DATABASE }}
            export MONGO_USER=${{ secrets.MONGO_USER }}
            export MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}
            export MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
            export MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
            export JIRA_APP_CLIENT_ID=${{ secrets.JIRA_APP_CLIENT_ID }}
            export JIRA_APP_SECRET=${{ secrets.JIRA_APP_SECRET }}
            export TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
            echo "$SERVER_HOST"
            docker-compose up -d --build